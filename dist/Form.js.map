{"version":3,"sources":["../src/Form.js"],"names":["validate","validators","presence","options","message","email","Form","data","errors","Errors","window","originalData","proxy","currentStepIndex","constraints","field","Object","keys","includes","Error","_","isEmpty","checkDuplicate","assign","value","messageBag","validator","undefined","clear","set","action","endpoint","console","log","axios","toLowerCase","length","res","record","bag","map","__","filter"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA;AACAA,sBAASC,UAAT,CAAoBC,QAApB,CAA6BC,OAA7B,GAAuC;AAACC,EAAAA,OAAO,EAAE;AAAV,CAAvC;AACAJ,sBAASC,UAAT,CAAoBI,KAApB,CAA0BF,OAA1B,GAAoC;AAACC,EAAAA,OAAO,EAAE;AAAV,CAApC;;IAGME,I;AACF,gBAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKC,MAAL,GAAc,IAAIC,kBAAJ,EAAd;AACAC,IAAAA,MAAM,CAACF,MAAP,GAAgB,KAAKA,MAArB;AACA,SAAKG,YAAL,GAAoB,EAApB;AACA,SAAKC,KAAL,CAAWL,IAAX;AACA,SAAKM,gBAAL,GAAwB,CAAxB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;;;mCAEcP,I,EAAM;AACjB,WAAK,IAAIQ,KAAT,IAAkBR,IAAlB,EAAwB;AACpB,YAAIS,MAAM,CAACC,IAAP,CAAY,KAAKN,YAAjB,EAA+BO,QAA/B,CAAwCH,KAAxC,CAAJ,EAAoD;AAChD,gBAAM,IAAII,KAAJ,CAAU,SAASJ,KAAT,GAAiB,iCAA3B,CAAN;AACH;AACJ;AACJ;;;0BAEKR,I,EAAM;AACR,UAAIa,mBAAEC,OAAF,CAAUd,IAAV,CAAJ,EAAqB;AACjB;AACH;;AAED,WAAKe,cAAL,CAAoBf,IAApB;;AAEA,WAAK,IAAIQ,KAAT,IAAkBR,IAAlB,EAAwB;AACpB,aAAKQ,KAAL,IAAcR,IAAI,CAACQ,KAAD,CAAlB;AACH;;AAED,UAAIJ,YAAY,GAAGK,MAAM,CAACO,MAAP,CAAc,KAAKZ,YAAnB,EAAiCJ,IAAjC,CAAnB;AACA,aAAO,KAAKI,YAAZ;AACA,WAAKA,YAAL,GAAoBA,YAApB;AACH;;;2BAEM;AACH,UAAIJ,IAAI,GAAGS,MAAM,CAACO,MAAP,CAAc,EAAd,EAAkB,IAAlB,CAAX;AACA,aAAOhB,IAAI,CAACI,YAAZ;AACA,aAAOJ,IAAI,CAACC,MAAZ;AACA,aAAOD,IAAP;AACH;;;6BAEOA,I,EAAM;AACV,WAAKK,KAAL,CAAWL,IAAX;AACH;;;8BAESQ,K,EAAOS,K,EAAO;AACpB,aAAO,+CAAWT,KAAX,EAAmBS,KAAnB,uBAA6BT,KAA7B,EAAqC,KAAKD,WAAL,CAAiBC,KAAjB,CAArC,EAAP;AACH;;;6BAEQA,K,EAAOS,K,EAAO;AACnB,UAAIC,UAAU,GAAG,KAAKC,SAAL,CAAeX,KAAf,EAAsBS,KAAtB,CAAjB;;AACA,UAAIJ,mBAAEC,OAAF,CAAUI,UAAV,KAAyBE,SAA7B,EAAwC;AACpC,aAAKnB,MAAL,CAAYoB,KAAZ,CAAkBb,KAAlB;AACA;AACH;;AACD,WAAKP,MAAL,CAAYqB,GAAZ,CAAgBd,KAAhB,EAAuBU,UAAvB;AACA,aAAOA,UAAP;AACH;;;2BAGMV,K,EAAOS,K,EAAO;AACjB,UAAI,CAACJ,mBAAEC,OAAF,CAAUG,KAAV,CAAL,EAAuB;AACnB;AACH;;AACD,WAAKT,KAAL,IAAcS,KAAd;AACH;;;2BAEMM,M,EAAQC,Q,EAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAOC,uBAAMJ,MAAM,CAACK,WAAP,EAAN,EAA4BJ,QAA5B,oBACA,KAAKxB,IAAL,EADA,EAAP;AAGP;;;kCAEa;AACV,aAAOS,MAAM,CAACC,IAAP,CAAY,KAAKT,MAAL,CAAYD,IAAxB,EAA8B6B,MAA9B,KAAyC,CAAhD;AACH;;;4BAWO,CAEP;;;gCAEW;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKzB,MAAL,CAAYoB,KAAZ;AACA,WAAKrB,IAAL,GAAY,EAAZ;AAEH;;;2BAEM8B,G,EAAK;AAAA;;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ,aAAYA,GAAZ,oCAAYA,GAAG,CAAE9B,IAAjB,8CAAY,UAAWC,MAAvB;AAEA,UAAIA,MAAM,GAAG6B,GAAH,aAAGA,GAAH,qCAAGA,GAAG,CAAE9B,IAAR,+CAAG,WAAWC,MAAxB;;AACA,UAAI,CAAC,CAACA,MAAN,EAAc;AACV,aAAKA,MAAL,CAAY8B,MAAZ,CAAmB9B,MAAnB;AACH,OAFD,MAEO;AACH,aAAKA,MAAL,CAAYoB,KAAZ;AACH;AACJ;;;wBA9Bc;AAAA;;AACX,UAAIrB,IAAI,GAAG,KAAKA,IAAL,EAAX;AAEA,UAAIgC,GAAG,GAAGvB,MAAM,CAACC,IAAP,CAAYV,IAAZ,EACLiC,GADK,CACD,UAAAC,EAAE;AAAA,eAAI,KAAI,CAACzC,QAAL,CAAcyC,EAAd,EAAkBlC,IAAI,CAACkC,EAAD,CAAtB,CAAJ;AAAA,OADD,EAELC,MAFK,CAEE,UAAAD,EAAE;AAAA,eAAId,SAAS,KAAKc,EAAlB;AAAA,OAFJ,CAAV;AAGA,aAAOF,GAAG,CAACH,MAAJ,GAAa,CAAb,GAAiBG,GAAjB,GAAuB,IAA9B;AACH;;;;;;eA2BUjC,I","sourcesContent":["import axios from \"./axiosSetup\";\nimport Errors from \"./Errors\"\nimport _ from 'lodash'\nimport validate from 'validate.js'\n\n// TODO: Marc Flavius - spell check\nvalidate.validators.presence.options = {message: \"- Ce champ est requis\"};\nvalidate.validators.email.options = {message: \"- Le format semble incorrect\"};\n\n\nclass Form {\n    constructor(data) {\n        this.errors = new Errors()\n        window.errors = this.errors\n        this.originalData = {}\n        this.proxy(data);\n        this.currentStepIndex = 0\n        this.constraints = {}\n    }\n\n    checkDuplicate(data) {\n        for (let field in data) {\n            if (Object.keys(this.originalData).includes(field)) {\n                throw new Error(\"key \" + field + \" allready exists on form Object\")\n            }\n        }\n    }\n\n    proxy(data) {\n        if (_.isEmpty(data)) {\n            return;\n        }\n\n        this.checkDuplicate(data)\n\n        for (let field in data) {\n            this[field] = data[field]\n        }\n\n        let originalData = Object.assign(this.originalData, data);\n        delete this.originalData;\n        this.originalData = originalData\n    }\n\n    data() {\n        let data = Object.assign({}, this);\n        delete data.originalData;\n        delete data.errors;\n        return data;\n    }\n\n    extends(data) {\n        this.proxy(data)\n    }\n\n    validator(field, value) {\n        return validate({[field]: value}, {[field]: this.constraints[field]});\n    }\n\n    validate(field, value) {\n        let messageBag = this.validator(field, value);\n        if (_.isEmpty(messageBag) || undefined) {\n            this.errors.clear(field);\n            return;\n        }\n        this.errors.set(field, messageBag);\n        return messageBag;\n    }\n\n\n    update(field, value) {\n        if (!_.isEmpty(value)) {\n            return\n        }\n        this[field] = value;\n    }\n\n    submit(action, endpoint) {\n            console.log('submited')\n            return axios[action.toLowerCase()](endpoint, {\n                ...this.data(),\n            })\n    }\n\n    hasNoErrors() {\n        return Object.keys(this.errors.data).length === 0;\n    }\n\n    get isValide() {\n        let data = this.data();\n\n        let bag = Object.keys(data)\n            .map(__ => this.validate(__, data[__]))\n            .filter(__ => undefined !== __);\n        return bag.length > 0 ? bag : true;\n    }\n\n    reset() {\n\n    }\n\n    onSuccess() {\n        console.log(\"onSuccess\")\n        this.errors.clear();\n        this.data = {}\n\n    }\n\n    onFail(res) {\n        console.log(\"onFail\")\n        console.log(res?.data?.errors);\n\n        let errors = res?.data?.errors;\n        if (!!errors) {\n            this.errors.record(errors);\n        } else {\n            this.errors.clear();\n        }\n    }\n\n}\n\nexport default Form\n"],"file":"Form.js"}