{"version":3,"sources":["../src/Form.js"],"names":["validate","validators","presence","options","message","email","Form","data","errors","Errors","originalData","proxy","currentStepIndex","constraints","field","Object","keys","includes","Error","_","isEmpty","checkDuplicate","isArray","value","assign","messageBag","validator","undefined","clear","set","action","endpoint","length","axios","toLowerCase","bag","map","__","filter"],"mappings":"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","file":"Form.js","sourcesContent":["import axios from \"axios\";\nimport Errors from \"./Errors\"\nimport _ from 'lodash'\nimport validate from 'validate.js'\n\n// TODO: Marc Flavius - spell check\nvalidate.validators.presence.options = {message: \"- Ce champ est requis\"};\nvalidate.validators.email.options = {message: \"- Le format semble incorrect\"};\n\n\nclass Form {\n    constructor(data) {\n        this.errors = new Errors()\n        this.originalData = {}\n        this.proxy(data);\n        this.currentStepIndex = 0\n        this.constraints = {}\n    }\n\n    checkDuplicate(data) {\n        for (let field in data) {\n            if (Object.keys(this.originalData).includes(field)) {\n                throw new Error(\"key \" + field + \" allready exists on form Object\")\n            }\n        }\n    }\n\n    proxy(data) {\n        if (_.isEmpty(data)) {\n            return;\n        }\n\n        this.checkDuplicate(data)\n\n        for (let field in data) {\n            if (_.isArray(data[field])) {\n                this[field] = data[field][0].value || \"\";\n                Object.assign(this.constraints, {[field]: data[field][0].constraints})\n            } else {\n                this[field] = data[field] || false\n            }\n        }\n\n        let originalData = Object.assign(this.originalData, data);\n        delete this.originalData;\n        this.originalData = originalData\n    }\n\n    data() {\n        let data = Object.assign({}, this);\n        delete data.originalData;\n        delete data.errors;\n        return data;\n    }\n\n    extends(data) {\n        this.proxy(data)\n    }\n\n    validator(field, value) {\n        return validate({[field]: value}, {[field]: this.constraints[field]});\n    }\n\n    validate(field, value) {\n        let messageBag = this.validator(field, value);\n        if (_.isEmpty(messageBag) || undefined) {\n            this.errors.clear(field);\n            return;\n        }\n        this.errors.set(field, messageBag);\n        return messageBag;\n    }\n\n\n    update(field, value) {\n        if (!_.isEmpty(value)) {\n            return\n        }\n        this[field] = value;\n    }\n\n    submit(action, endpoint) {\n        if (Object.keys(this.errors.data).length <= 0) {\n            return axios[action.toLowerCase()](endpoint, {\n                ...this.data(),\n            })\n        }\n    }\n\n    get isValide() {\n        let data = this.data();\n\n        let bag = Object.keys(data)\n            .map(__ => this.validate(__, data[__]))\n            .filter(__ => undefined !== __);\n\n        return bag.length > 0 ? bag : true;\n    }\n\n    reset() {\n\n    }\n\n    dodo   (){\n        \n    }\n}\n\nexport default Form\n"]}